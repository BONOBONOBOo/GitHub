-- usename : fbi
-- password : oracle

--select sysdate from dual;
--select * from userinfo;
/*
    해야할일
        트리거 만들기
            1.회원가입시 user_vote,comments 테이블 userid를 이용해 초기화하기
            2.새로운 빌딩건물이 들어올 때 총투표 테이블과 상세 투표테이블 모두 초기화하기

*/

select * from userinfo;
--#####################################################################################--
select * from userinfo;
select * from comments;
select * from user_vote;

delete from userinfo;
delete from comments;
delete from user_vote;

commit;

create table userInfo(--사용자 테이블
userid varchar2(20) primary key,--아이디(이메일 형식)
userpass varchar2(20) not null,--비밀번호
username varchar2(20) not null,--사용자 이름
usernum varchar2(20),--사용자 전화번호
concernList varchar2(100) default null,--관심목록
foundMoney number(20) default 0,--예상금액
foundDate date,--예상 펀딩 시작날짜
adviceYN char(1) constraint advice_YN check(adviceYN in('Y','N')),--상담필요유무
founderYN char(1) constraint found_check check(founderYN in ('Y','N')),--창업자 유무
myBuilding varchar2(30) default null, -- 창업자가 클라우드 펀딩을 신청하여 건물을 받았을 때
constraint building_fk foreign key(myBuilding) references building(bdId) on delete cascade -- 이부분 생성 바로하면 에러날수도있음 수정해서 넣은부분
);

select * from userinfo;
commit;
select * from building;
update userinfo
set usernum = 1
where username = 'dubu';

update userinfo
set myBuilding = 'KBM003651'
where userid ='hoho@naver.com';

update userinfo
set myBuilding = 'KBM003653'
where userid ='haha@naver.com';

update userinfo
set myBuilding = 'KBM003654'
where userid ='popo@naver.com';

update userinfo
set founderyn = 'N'
where username = 'dubu';

select * from userinfo;
delete from userinfo where userid = 'www';

commit;
--delete from userinfo where userid != 'dubu@naver.com';
--alter table userinfo rename column userphone to usernum;
--insert into userinfo(userid,userpass,username) values('admin','1234','두부');
--alter table userinfo modify (concernList varchar2(100));
--alter table userinfo modify (userid varchar2(30));--오류날때 의심하기


--계좌등록 만들기
--account varchar2(20), -- 계좌
--bank varchar2(10), -- 은행
--계좌,은행 삭제
--이름 전화번호 추가
--관심목록 창업예상시기 창업예상금액 상담유무 추가


commit;
--#####################################################################################--

create table user_vote( -- 사용자가 투표한 건물들을 체크하기위한 테이블
user_vote_idx number(3) primary key, --인덱스
userid varchar2(20), -- userid fk
vote_build_id number(20), -- bdId
constraint user_vote_fk foreign key(userid) references userInfo(userid) on delete cascade
);
create sequence user_vote_seq Start with 1 increment by 1 maxvalue 1000 nocycle nocache; -- comment에서 사용 할 시퀀스

select * from userinfo;
select * from user_vote;

create or replace trigger user_vote_trigger
after
insert on userinfo
for each row
begin
    insert into user_vote
    values(user_vote_seq.nextval,:new.userid,null);
end;
--drop trigger user_vote_trigger;
commit;
select * from user_vote;
--#####################################################################################--

--alter table userinfo add(myBuilding number(20));
--alter table userInfo add(constraint building_fk foreign key(myBuilding) references building(bdId) on delete cascade);

--select * from all_constraints where table_name='userinfo';
--alter table userinfo drop constraint building_fk;

--#####################################################################################--

create table comments(--댓글 테이블
comm_idx number(7) primary key, --자동으로 증가하는 인덱스
comm varchar(200) not null,--댓글내용
userid varchar(20),--사용자
upnum number(10),--추천
constraint userid_fk foreign key(userid) references userInfo(userid)--userinfo테이블에서 userid를 받아옴
);

--새로추가
create or replace trigger comments_trigger
after
insert on userinfo
for each row
begin
    insert into comments values(comm_seq.nextval,' ',:new.userid,0);
end;

drop trigger comments_trigger;
commit;
create sequence comm_seq Start with 1 increment by 1 maxvalue 10000 nocycle nocache; -- comment에서 사용 할 시퀀스
insert into comments values(comm_seq.nextval,'테스트','admin',100);--삽입할때 comm_seq.nextval꼭 사용해야함

--#####################################################################################--

create table building(--건물정보 테이블
bdId varchar2(30) primary key,--건물 일련번호
location_x number(30,25) default 0,--위치 x
location_y number(30,25) default 0,--위치 y
startDate date, -- 펀딩중이라면 시작하는날
endDate date, -- 끝나는날
address varchar(100) not null,--주소 스트링 받아서 잘라서 사용해야함
month_pay number(10) default 0,--월세
all_pay number(10) default 0,--전세
manage_pay number(10) default 0,--관리비
userid varchar2(20), -- 펀딩중이라면 해당 유저의 아이디
category varchar2(20),--펀딩중이라면 가게의 카테고리 혹은 종목
    fundingYN char(1) constraint buld_found_check check(fundingYN in ('Y','N')),--펀딩중인 건물인지 확인하기
src varchar2(100)
);
--update building set month_pay = 100000 , all_pay = 1000000000 where bdid = 'KBM003656';
select * from building;

delete from building
where bdid = 'KBM003658';

select * from cols where table_name = 'userinfo';

select * from all_tab_columns where table_name = 'userinfo';
select * from userinfo;
select * from building;

select * from userinfo;




insert into building--#2
values('KBM003657',127.07548589991310,37.49465833847702,
        null,null,'서울특별시 마포구 망원동 397-19',
        3000000,600000000,217878,
        null,'coffee','N',
        'https://nimg3.kbstar.com/nland/apttype/groundplan/KBA012381_2.jpg');
        
insert into building--#3
values('KBM003654',127.07548589991320,37.49465833847722,
        '19/04/28','19/06/30','서울특별시 마포구 망원동 397-19',
        2030000,100000000,823278,
        'popo@naver.com','karaoke','Y',
        'https://nimg3.kbstar.com/nland/apttype/groundplan/KBA012381_2.jpg');
        

        
insert into building--#4
values('KBM003653',127.07548589991300,37.49465833847700,
        '19/06/27','19/07/27','서울특별시 마포구 망원동 397-19',
        1000000,220000000,100878,
        'haha@naver.com','coffee','Y',
        'https://nimg3.kbstar.com/nland/apttype/groundplan/KBA012381_2.jpg');


insert into building--#5
values('KBM003652',127.07548589991410,37.49465833847800,
        null,null,'서울특별시 마포구 망원동 397-19',
        3300000,660000000,217878,
        null,'coffee','N',
        'https://nimg3.kbstar.com/nland/apttype/groundplan/KBA012381_2.jpg');
        
insert into building--#6
values('KBM003651',127.07548589991318,37.49465833847708,
        '19/06/20','19/08/30','서울특별시 마포구 망원동 397-19',
        3000000,600000000,217878,
        'hoho@naver.com','billiard','Y',
        'https://nimg3.kbstar.com/nland/apttype/groundplan/KBA012381_2.jpg');

select * from building;

delete from building where fundingYn = 'Y';


select src from building;

alter table building add (src varchar(100));
select * from building;
desc building;
commit;
delete from building;
--alter table building modify(location_x number(30,25));
--alter table building modify(location_y number(30,25));

--alter table building modify(bdId varchar2(20));


--#####################################################################################--
create table voting(--투표테이블
vote_idx number(7) primary key, -- vote 인덱스
bdId varchar2(30), -- 빌딩 아이디 fk
dessert number(3) default 0,--휴게음식점 (커피,제과)
westernFood number(3) default 0,--일반 음식점
store number(3) default 0,--악세사리,편의점,화장품
entertaiment number(3) default 0,--헬스 스크린골프 pc 노래방
lodgment number(3) default 0,--숙박
constraint vote_building_fk foreign key(bdId) references building(bdId) on delete cascade
);
select * from voting;
insert into voting(vote_idx,bdId) values(vote_seq.nextval,'KBM003656');

--create sequence vote_seq Start with 1 increment by 1 maxvalue 1000 nocycle nocache;--vote에서 사용 할 시퀀스
--insert into voting values(vote_seq.nextval,111,0,0,0,0,0); -- 삽입할때 vote_seq.nextval 사용해야함




--alter table voting rename column restaurant to westernFood;
--alter table voting rename column enter to entertaiment;
--#####################################################################################--
create table dessert(
dessert_idx number(10) primary key,
buildnum varchar2(30),
coffee number(3) default 0,--커피
bakery number(3) default 0,--빵집
icecream number(3) default 0,--아이스크림
kidsCafe number(3) default 0,--키즈카페
petCafe number(3) default 0,--펫카페
studyCafe number(3) default 0,--스터디카페
constraint bd_dessert_fk foreign key(buildnum) references building(bdId) on delete cascade
);  

update dessert
set 
coffee = 1,
bakery = 1,
icecream = 1,
kidsCafe = 1,
petCafe = 1,
studyCafe = 1
where buildnum='KBM003656';

create sequence dessert_seq Start with 1 increment by 1 maxvalue 10000 nocycle nocache;
insert into dessert(dessert_idx,buildnum) values(dessert_seq.nextval,'KBM003656');
drop table dessert;
select * from dessert;
--alter table dessert drop column doughnut;
--도넛 삭제


alter table dessert add (kidsCafe number(3) default 0);
alter table dessert add (petCafe number(3) default 0);
alter table dessert add (studyCafe number(3) default 0);

select * from dessert;
drop trigger dessert_trigger;

create or replace trigger dessert_trigger
after
update on dessert
for each row
begin
    update voting
    set dessert = :new.coffee+:new.bakery+:new.icecream+
    :new.kidsCafe+:new.petCafe+:new.studyCafe
    where bdId = :old.buildnum;
end;


--#####################################################################################--
create table westernFood(
western_idx number(10) primary key,
buildnum varchar2(30),
krFood number(3) default 0,--한식
chiFood number(3) default 0,--중식
japFood number(3) default 0,--일식
vietFood number(3) default 0,--베트남음식
snackBar number(3) default 0,--분식점
restaurant number(3) default 0,--레스토랑
bar number(3) default 0,--바
chicken number(3) default 0,--치킨
beer number(3) default 0,--맥주
pizza number(3) default 0,--피자
hamburger number(3) default 0,--햄버거
meatRest number(3) default 0,--고기집
nightMeal number(3) default 0, -- 야식
constraint bd_restaurant_fk foreign key(buildnum) references building(bdId) on delete cascade
);


--alter table restaurant add(nightMeal number(3) default 0);
--야식 테이블 추가
--alter table restaurant rename to westernFood;
--테이블 명 변경


alter table westernFood rename column restaurant_idx to western_idx;

create sequence western_seq Start with 3 increment by 1 maxvalue 10000 nocycle nocache;
insert into westernfood(western_idx,buildnum) values(western_seq.nextval,'KBM003656');

update westernFood
set
krFood =2,
chiFood=2,
japFood =2,
vietFood =2,
snackBar =2,
restaurant=2,
bar =2,
chicken=2, 
beer=2,
pizza =2,
hamburger =2,
meatRest =2,
nightMeal =2
where buildnum='KBM003656';


create or replace trigger westernFood_trigger
after
update on westernFood
for each row
begin
    update voting
    set westernFood = 
    :new.krFood+
:new.chiFood+:new.japFood+
:new.vietFood+:new.snackBar+:new.restaurant+
:new.bar+:new.chicken+:new.beer+
:new.pizza+:new.hamburger+:new.meatRest+:new.nightMeal
    where bdId = :old.buildnum;
end;

--#####################################################################################--

create table store(
store_idx number(10) primary key,
buildnum varchar2(30),
accessory number(3) default 0,--악세사리
convenienStore number(3) default 0,--편의점
cosmetics number(3) default 0,--화장품
phone number(3) default 0,--핸드폰 가맹점
constraint bd_store_fk foreign key(buildnum) references building(bdId) on delete cascade
);

update store
set
accessory = 3,
convenienStore = 3,
cosmetics = 3,
phone =3
where buildnum='KBM003656';

select * from voting;
select * from store;

create sequence store_seq Start with 1 increment by 1 maxvalue 10000 nocycle nocache;
insert into store(store_idx,buildnum) values(store_seq.nextval,'KBM003656');

create or replace trigger store_trigger
after
update on store
for each row
begin
    update voting
    set store = :new.accessory+:new.convenienStore+:new.cosmetics+:new.phone
    where bdId = :old.buildnum;
end;

--#####################################################################################--

create table lodgment(
lodgment_idx number(10) primary key,
buildnum varchar2(30),
hotel number(3) default 0, --호텔
motel number(3) default 0, --모텔
constraint bd_lodgment_fk foreign key(buildnum) references building(bdId) on delete cascade
);

create sequence lodgment_seq Start with 1 increment by 1 maxvalue 10000 nocycle nocache;
insert into lodgment(lodgment_idx,buildnum) values(lodgment_seq.nextval,'KBM003656');
update  lodgment set hotel=3,motel=2 where buildnum='KBM003656';

create or replace trigger lodgment_trigger
after
update on lodgment
for each row
begin
    update voting
    set lodgment = :new.hotel+:new.motel
    where bdId = :old.buildnum;
end;

--#####################################################################################--

create table entertaiment(
entertaiment_idx number(10) primary key,
buildnum varchar2(30),
fitness number(3) default 0,--헬스장
screenGolf number(3) default 0,--스크린 골프
billiard number(3) default 0,--당구장
PC number(3) default 0,--피시방
yoga number(3) default 0,-- 요가
massage number(3) default 0,--마사지
nailCare number(3) default 0,--네일샵
karaoke number(3) default 0,--노래방
constraint bd_entertaiment_fk foreign key(buildnum) references building(bdId) on delete cascade
);

create sequence entertaiment_seq Start with 1 increment by 1 maxvalue 10000 nocycle nocache;
insert into entertaiment(entertaiment_idx,buildnum) values(entertaiment_seq.nextval,'KBM003656');

update entertaiment
set
fitness =4,
screenGolf=4,
billiard =4,
PC =4,
yoga =4,
massage =4,
nailCare =4,
karaoke =4
where buildnum='KBM003656';


create or replace trigger entertaiment_trigger
after
update on entertaiment
for each row
begin
    update voting
    set entertaiment = 
    :new.fitness+:new.screenGolf+:new.billiard+:new.PC
    +:new.yoga+:new.massage+:new.nailCare
    +:new.karaoke
    where bdId = :old.buildnum;
end;

--#####################################################################################--
    
create table marketResearch(
    market_idx number(20) primary key,
    actvty_idx_sctn_cd varchar2(20),--null
    stable_idx_value varchar2(20),--:49.1,
    stdr_ym_cd varchar2(20),--:"201810",
    ovpop_idex_sctn_cd_nm varchar2(20),--:"경계",
    stable_idx_sctn_cd varchar2(20),--:"3",
    trdar_cd_nm varchar2(20),--:"희우정로16길",
    growth_idx_value varchar2(20),--:34.89,
    ovpop_idex_value varchar2(20),--:54.7,
    growth_idx_sctn_cd varchar2(20),--:"4",
    stable_idx_sctn_cd_nm varchar2(20),--:"보통",
    svc_induty_cd_nm varchar2(20),--:"화장품",
    growth_idx_sctn_cd_nm varchar2(20),--:"낮음",
    actvty_idx_value varchar2(20),--:null,
    svc_induty_cd varchar2(20),--:"CS300011",
    actvty_idx_sctn_cd_nm varchar2(20), --:null,
    ovpop_idex_sctn_cd varchar2(20),--:"2",
    trdar_cd varchar2(20)--:"001744" 
);
drop table marketResearch;
select * from marketResearch;
select * from userinfo;
create sequence market_seq Start with 1 increment by 1 maxvalue 5000000 nocycle nocache;
drop sequence market_seq;
commit;

create table user12(
이름 varchar2(10) primary key,
나이 number(3));
drop table user12;

select * from marketResearch where trdar_cd_nm='희우정로16길';
select * from marketResearch where trdar_cd_nm='희우정로16길';
select * from building;
desc marketResearch;
select * from building;
--#####################################################################################--
select * from userinfo;
--select * from userInfo;--유저정보
--select * from comments;--댓글정보
--select * from building;--건물정보
--select * from voting;--투표정보
----투표상세 테이블--
--select * from dessert;
--select * from restaurant;
--select * from store;
--select * from entertaiment;
--select * from lodgment;
--
--drop table userinfo;
--drop table user_vote;
--drop table comments;
--drop table building;
--drop table voting;
--drop table dessert;
--drop table westernFood;
--drop table store;
--drop table lodgment;
--drop table entertaiment;


--http://data.seoul.go.kr/dataList/datasetView.do?infId=OA-2754&srvType=A&serviceKind=1&currentPageNo=1